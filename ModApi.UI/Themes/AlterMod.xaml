<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mod="clr-namespace:ModApi.UI"
            xmlns:win="clr-namespace:ModApi.UI.Windows"
            xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ModApi.UI;component/Themes/Colors/AlterModBaseLight.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ModApi.UI;component/Themes/Colors/AlterModBlue.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <sys:String x:Key="ThemeName">AlterMod</sys:String>

    <!--#region Converters-->
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <mod:PercentageDoubleConverter x:Key="PercentageDoubleConverter"/>
    <mod:IsNullOrWhiteSpaceConverter x:Key="IsNullOrWhiteSpaceConverter"/>
    <mod:ThicknessToCornerRadiusConverter x:Key="ThicknessToCornerRadiusConverter"/>
    <mod:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <mod:DoubleComparisonConverter x:Key="DoubleComparisonConverter"/>
    <mod:SubtractConverter x:Key="SubtractConverter"/>
    <mod:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter"/>
    <mod:IconToImageBrushConverter x:Key="IconToImageBrushConverter"/>
    <mod:GetMaximizeBorderThicknessConverter x:Key="GetMaximizeBorderThicknessConverter"/>
    <mod:GetMaximizeOffsetDoubleConverter x:Key="GetMaximizeOffsetDoubleConverter"/>
    
    <!--#endregion Converters-->


    <!--#region Brushes
    
    <DropShadowEffect x:Key="DropShadow" Color="Black" Direction="270" ShadowDepth="3" BlurRadius="7.5" Opacity="0.5" />

    <RadialGradientBrush x:Key="DialogFadeGradientBrush" GradientOrigin="0.5,0.5" Center="0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Offset="0.25" Color="#60000000"/>
            <GradientStop Offset="1.25" Color="#C0000000"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="WindowBackgroundBrush">#FFCCCCCC</SolidColorBrush>
    <SolidColorBrush x:Key="WindowBorderBrush">#FF555555</SolidColorBrush>

    <SolidColorBrush x:Key="TitlebarBorderBrush">#FF9B9B9B</SolidColorBrush>
    <SolidColorBrush x:Key="TitlebarIdleForegroundBrush">#FFCBCBCB</SolidColorBrush>
    <SolidColorBrush x:Key="TitlebarHoverForegroundBrush">White</SolidColorBrush>
    <SolidColorBrush x:Key="TitlebarPressedForegroundBrush">#FF606060</SolidColorBrush>
    <SolidColorBrush x:Key="TitlebarDisabledForegroundBrush">#7FCBCBCB</SolidColorBrush>
    <GradientStopCollection x:Key="TitlebarActiveGradientStops">
        <GradientStop Offset="0" Color="#FF575757"/>
        <GradientStop Offset="1" Color="#FF454545"/>
    </GradientStopCollection>
    <GradientStopCollection x:Key="TitlebarInactiveGradientStops">
        <GradientStop Offset="0" Color="#FF7B7B7B"/>
        <GradientStop Offset="1" Color="#FF6B6B6B"/>
    </GradientStopCollection>

    <GradientStopCollection x:Key="ShadowGradientStops">
        <GradientStop Offset="0" Color="#7F000000"/>
        <GradientStop Offset="1" Color="#00000000"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="ShadowCornerBorderBrush">#7F000000</SolidColorBrush>

    <SolidColorBrush x:Key="ButtonForegroundBrush">#FF333333</SolidColorBrush>
    <GradientStopCollection x:Key="ButtonBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFEEEEEE"/>
        <GradientStop Offset="1" Color="#FFDADADA"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="ButtonIdleBorderBrush">#FFB5B5B5</SolidColorBrush>
    <GradientStopCollection x:Key="ButtonIdleBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFFCFCFC"/>
        <GradientStop Offset="1" Color="#FFE2E2E2"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="ButtonHoverBorderBrush">#FFCECECE</SolidColorBrush>
    <GradientStopCollection x:Key="ButtonHoverBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFFFFFFF"/>
        <GradientStop Offset="1" Color="#FFFBFBFB"/>
    </GradientStopCollection>
    <GradientStopCollection x:Key="ButtonHoverSecondaryBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFF2F2F2"/>
        <GradientStop Offset="1" Color="#FFE9E9E9"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="ButtonPressedBorderBrush">#FF83A6B6</SolidColorBrush>
    <GradientStopCollection x:Key="ButtonPressedBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFD6ECF6"/>
        <GradientStop Offset="1" Color="#FFA5D1E4"/>
    </GradientStopCollection>
    <GradientStopCollection x:Key="ButtonPressedSecondaryBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFB1DAEE"/>
        <GradientStop Offset="1" Color="#FF9DC6DA"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="ButtonDisabledBorderBrush">#FF9D9D9D</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonDisabledBackgroundBrush">#FFE6E6E6</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonDisabledSecondaryBackgroundBrush">#FFC6C6C6</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonDisabledForegroundBrush">#7F000000</SolidColorBrush>

    <GradientStopCollection x:Key="CardListViewSelectedBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFD6ECF6"/>
        <GradientStop Offset="1" Color="#FF9DC6DA"/>
    </GradientStopCollection>

    <GradientStopCollection x:Key="HorizontalPanelBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFFDFDFD"/>
        <GradientStop Offset="1" Color="#FFE7E7E7"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="HorizontalPanelBorderBrush">#FFB5B5B5</SolidColorBrush>

    <GradientStopCollection x:Key="VerticalPanelBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFF1F1F1"/>
        <GradientStop Offset="1" Color="#FFDEDEDE"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="VerticalPanelBorderBrush">#FFB5B5B5</SolidColorBrush>

    <SolidColorBrush x:Key="CheckBoxTickBrush">#FF00405B</SolidColorBrush>

    <SolidColorBrush x:Key="TabItemIdleBorderBrush">#FF909090</SolidColorBrush>
    <GradientStopCollection x:Key="TabItemIdleBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFDCDCDC"/>
        <GradientStop Offset="1" Color="#FFC2C2C2"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="TabItemHoverBorderBrush">#FFCECECE</SolidColorBrush>
    <GradientStopCollection x:Key="TabItemHoverBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFDCDCDC"/>
        <GradientStop Offset="1" Color="#FFC2C2C2"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="TabItemPressedBorderBrush">#FFB0B0B0</SolidColorBrush>
    <GradientStopCollection x:Key="TabItemPressedBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFF7F7F7"/>
        <GradientStop Offset="1" Color="#FFDDDDDD"/>
    </GradientStopCollection>
    <GradientStopCollection x:Key="TabItemPressedSecondaryBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFE9E9E9"/>
        <GradientStop Offset="1" Color="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Converter={StaticResource SolidColorBrushToColorConverter}}"/>
    </GradientStopCollection>
    <SolidColorBrush x:Key="TabItemPressedFlashBackground">#7FB1DAEE</SolidColorBrush>
    <SolidColorBrush x:Key="TabItemPressedFlashBorderBrush">#FFB1DAEE</SolidColorBrush>
    <SolidColorBrush x:Key="TabControlBorderBrush">#FFB0B0B0</SolidColorBrush>
    <GradientStopCollection x:Key="TabControlSecondaryBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFDDDDDD"/>
        <GradientStop Offset="1" Color="#FFC2C2C2"/>
    </GradientStopCollection>

    <GradientStopCollection x:Key="TabItemIdleSecondaryBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFEEEEEE"/>
        <GradientStop Offset="1" Color="#FFFFFFFF"/>
    </GradientStopCollection>

    <GradientStopCollection x:Key="TextBoxIdleBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFF9F9F9"/>
        <GradientStop Offset="1" Color="#FFFFFFFF"/>
    </GradientStopCollection>

    <GradientStopCollection x:Key="ProgressBarTrackBackgroundGradientStops">
        <GradientStop Offset="0" Color="#FFD3D3D3"/>
        <GradientStop Offset="1" Color="#FFF0F0F0"/>
    </GradientStopCollection>

    <SolidColorBrush x:Key="ScrollBarLineUpButtonBackgroundBrush">#FFEEEEEE</SolidColorBrush>
    <SolidColorBrush x:Key="ScrollBarLineDownButtonBackgroundBrush">#FFDADADA</SolidColorBrush>

    <endregion Brushes-->

    
    <!--#region Window Styles-->
    
    <Style x:Key="CaptionButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="32"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TitlebarIdleForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Effect" Value="{DynamicResource DropShadow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000" Margin="{TemplateBinding Padding}">
                        <Label x:Name="Glyph" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" RenderOptions.EdgeMode="Aliased" IsTabStop="False" Margin="0" Padding="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TitlebarDisabledForegroundBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TitlebarDisabledForegroundBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TitlebarHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TitlebarPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type win:DecoratableWindow}" TargetType="{x:Type win:DecoratableWindow}">
        <Style.Resources>
            <ResourceDictionary>
                <QuarticEase x:Key="WindowVisibleEase" EasingMode="EaseOut"/>
                <QuinticEase x:Key="WindowHiddenEase" EasingMode="EaseIn"/>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform x:Name="RootScaleTransform" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="HideTransitionDuration" Value="50"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,24,0,0"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ShadowOffsetThickness" Value="25,15,25,40"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="EnableGlass" Value="False"/>
        <Setter Property="ShadowStyle">
            <Setter.Value>
                <Style TargetType="Window">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Window">
                                <Grid x:Name="ShadowGrid" ClipToBounds="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="45"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="45"/>
                                    </Grid.RowDefinitions>
                                    <Grid.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                                                    <Grid.OpacityMask>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#C0000000"/>
                                                                <GradientStop Offset="1" Color="Black"/>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Grid.OpacityMask>
                                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" ClipToBounds="True"/>
                                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" CornerRadius="15,15,22.5,22.5" ClipToBounds="True"/>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.OpacityMask>
                                    <Rectangle Grid.Column="0" Grid.Row="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="0" Grid.Row="0">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="1,1" Center="1,1" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="1" Grid.Row="0">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Grid.Row="0">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="0,1" Center="0,1" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Grid.Row="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Grid.Row="2">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="0,0" Center="0,0" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="1" Grid.Row="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="0" Grid.Row="2">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="1,0" Center="1,0" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Border BorderBrush="{DynamicResource ShadowCornerBorderBrush}" BorderThickness="2" CornerRadius="3" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="IsHitTestVisible" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type win:DecoratableWindow}">
                    <ControlTemplate.Resources>
                        <Style x:Key="BorderThumb" TargetType="Thumb">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="Background" Value="#01000000"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0" Fill="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ResizeGripThumbStyle" TargetType="Thumb" BasedOn="{StaticResource BorderThumb}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Width" Value="18" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="Margin" Value="0,0,5,5" />
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalAlignment" Value="Bottom" />
                            <Setter Property="Cursor" Value="SizeNWSE"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <ControlTemplate.Resources>

                                            <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Foreground" Value="Blue" />
                                                <Setter Property="Background" Value="#01000000" />
                                                <Setter Property="IsHitTestVisible" Value="True" />
                                                <Setter Property="Width" Value="18" />
                                                <Setter Property="Height" Value="18" />
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                                <Setter Property="VerticalAlignment" Value="Bottom" />
                                                <Setter Property="Cursor" Value="SizeNWSE"/>
                                                <Setter Property="FontFamily" Value="Marlett"/>
                                                <Setter Property="FontSize" Value="12"/>
                                                <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ResizeGrip}">
                                                            <Grid>
                                                                <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="10" Height="10">
                                                                    <!--TextBlock Foreground="{x:Static SystemColors.GrayTextBrush}">o</>
                                                                    <TextBlock Foreground="{x:Static SystemColors.HighlightTextBrush}">p</TextBlock-->
                                                                    <Rectangle Fill="Red"/>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ControlTemplate.Resources>
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Rectangle StrokeThickness="0">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="#01000000" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <ResizeGrip x:Name="PART_ResizeGrip"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="WindowRoot" BorderBrush="{DynamicResource WindowBorderBrush}" BorderThickness="1" CornerRadius="3" Margin="{TemplateBinding Margin}">
                        <Border.RenderTransform>
                            <TranslateTransform x:Name="WindowRootTransform" X="0" Y="0"/>
                        </Border.RenderTransform>
                        <Grid>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="{Binding BorderThickness, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter=t, FallbackValue=24}" Opacity="1" Background="#01000000">
                                <Border x:Name="TitlebarBorder" BorderBrush="{DynamicResource TitlebarBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0" VerticalAlignment="Stretch">
                                    <Grid>
                                        <Thumb x:Name="PART_Titlebar" Style="{DynamicResource BorderThumb}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Thumb.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem x:Name="PART_SystemMenuRestore" Header="Restore"/>
                                                    <MenuItem x:Name="PART_SystemMenuMove" Header="Move"/>
                                                    <MenuItem x:Name="PART_SystemMenuSize" Header="Size"/>
                                                    <MenuItem x:Name="PART_SystemMenuMinimize" Header="Minimize"/>
                                                    <MenuItem x:Name="PART_SystemMenuMaximize" Header="Maximize"/>
                                                    <MenuItem x:Name="PART_SystemMenuClose" Header="Close"/>
                                                </ContextMenu>
                                            </Thumb.ContextMenu>
                                        </Thumb>
                                        <Border x:Name="ActiveTitlebarBackground" IsHitTestVisible="False">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TitlebarActiveGradientStops}"/>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="InactiveTitlebarBackground" IsHitTestVisible="False" Visibility="Collapsed">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TitlebarInactiveGradientStops}"/>
                                            </Border.Background>
                                        </Border>
                                        <Grid UseLayoutRounding="True" VerticalAlignment="Stretch">
                                            <ContentPresenter Content="{TemplateBinding TitleBarContent}" IsHitTestVisible="False"/>
                                            <StackPanel x:Name="CaptionButtons" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Height="24">
                                                <Button x:Name="PART_MinimizeButton" Style="{DynamicResource CaptionButtonStyle}">
                                                    <Path Data="M 0 0 L 9 0 L 9 2 L 0 2 Z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Stroke="Transparent" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Button>
                                                <Grid x:Name="MaxRestButtonGrid" Width="Auto">
                                                    <Button x:Name="PART_MaximizeButton" Style="{DynamicResource CaptionButtonStyle}">
                                                        <Path Data="M 0 0 L 0 7 L 7 7 L 7 0 Z" Fill="Transparent" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,0,-1,0"/>
                                                    </Button>
                                                    <Button x:Name="PART_RestoreButton" Style="{DynamicResource CaptionButtonStyle}" Visibility="Hidden">
                                                        <Grid>
                                                            <Path Data="M 0 0 L 0 5 L 5 5 L 5 0 Z" Fill="Transparent" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,3,3,0"/>
                                                            <Path Data="M -1 0 L 5 0 L 5 6" Fill="Transparent" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,0,0,3"/>
                                                        </Grid>
                                                    </Button>
                                                </Grid>
                                                <Button x:Name="PART_CloseButton" Style="{DynamicResource CaptionButtonStyle}">
                                                    <Path Data="M 0 -1 L 2 -1 L 4.5 2 L 7 -1 L 9 -1 L 9 1 L 6 3.5 L 9 6 L 9 8 L 7 8 L 4.5 5 L 2 8 L 0 8 L 0 6 L 3 3.5 L 0 1 Z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Stroke="Transparent" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Button>
                                                <!--Rectangle Fill="Transparent" Stroke="Transparent" StrokeThickness="0" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}, Converter={StaticResource PercentageDoubleConverter}, ConverterParameter=45 44}" Margin="0,0,-45,0"/-->
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Height="24" Margin="10,0">
                                                <Rectangle x:Name="WindowIcon" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Width="16" Margin="0" Fill="{TemplateBinding Icon, Converter={StaticResource IconToImageBrushConverter}}"/>
                                                <TextBlock x:Name="TitleText" FontWeight="Bold" FontSize="12" Foreground="{DynamicResource TitlebarIdleForegroundBrush}" TextAlignment="Left" Margin="10,0" Effect="{DynamicResource DropShadow}" Text="{Binding Path=Title, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsHitTestVisible="False" VerticalAlignment="Center" Visibility="{TemplateBinding ShowTitlebarText, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <Border x:Name="Body" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" Margin="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0,0,2,2">
                                <!--Margin="{TemplateBinding BorderThickness}"-->
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </Border>
                            <Border x:Name="FullWindowContentGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" Margin="{TemplateBinding Padding}" CornerRadius="2">
                                <ContentPresenter Content="{TemplateBinding FullWindowContent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible"/>
                            </Border>
                            <Grid>
                                <Grid x:Name="ResizeGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Thumb x:Name="PART_ThumbBottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                   Grid.Column="0" Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3"
                                   Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbTop" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0"
                                   Margin="3,0" Grid.ColumnSpan="3" Height="4"
                                   Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4"
                                   Margin="0,3" Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4"
                                   HorizontalContentAlignment="Right" Margin="0,3"
                                   Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbBottomRightCorner" HorizontalAlignment="Right" Cursor="SizeNWSE"
                                   Grid.Row="3" Grid.Column="3"
                                   Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbTopRightCorner" HorizontalAlignment="Right" Cursor="SizeNESW"
                                   Grid.Row="0" Grid.Column="2"
                                   Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbTopLeftCorner" HorizontalAlignment="Left" Cursor="SizeNWSE"
                                   Grid.Row="0" Grid.Column="0"
                                   Style="{DynamicResource BorderThumb}" />
                                    <Thumb x:Name="PART_ThumbBottomLeftCorner" HorizontalAlignment="Left" Cursor="SizeNESW"
                                   Grid.Row="3" Grid.Column="0"
                                   Style="{DynamicResource BorderThumb}" />
                                </Grid>
                                <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumbStyle}" Visibility="Hidden" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="3" Grid.Row="3"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                            <Setter TargetName="WindowIcon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TitleText" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <!--Setter Property="Margin" Value="7"/-->
                            <!--Setter TargetName="WindowRoot" Property="TranslateTransform.X" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource GetMaximizeOffsetDoubleConverter}}"/>
                            <Setter TargetName="WindowRoot" Property="TranslateTransform.Y" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource GetMaximizeOffsetDoubleConverter}, ConverterParameter=vertical}"/-->
                            <Setter TargetName="WindowRoot" Property="Margin" Value="{Binding Converter={StaticResource GetMaximizeBorderThicknessConverter}}"/>
                            <Setter TargetName="WindowRoot" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="WindowRoot" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="TitlebarBorder" Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter TargetName="TitlebarBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Body" Property="CornerRadius" Value="0"/>
                            <!--Setter Property="MaxWidth" Value="{x:Static SystemParameters.PrimaryScreenWidth}"/>
                            <Setter Property="MaxHeight" Value="{x:Static SystemParameters.PrimaryScreenHeight}"/-->
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="TitleText" Property="Foreground" Value="{DynamicResource TitlebarDisabledForegroundBrush}"/>
                            <Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="None">
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsWindowVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.0">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames-->
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.75" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.5">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames-->
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="0.75" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion Window Styles-->


    <!--#region Button Styles-->
    
    <Style x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="IdleBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0"/>
                        </Border>
                        <Border x:Name="HoverBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                        </Border>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                        </Grid>
                        <!--Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                        </Grid.Effect-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="IdleBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Button Styles-->


    <!--#region ListView Styles-->
    
    <Style x:Key="{x:Type ListView}" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <Border x:Name="SelectedBackground" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ControlTemplate.Resources>
                        <CubicEase x:Key="ScalingEase" EasingMode="EaseOut"/>
                    </ControlTemplate.Resources>
                    <Grid x:Name="RootGrid" Margin="10" Background="#01000000" Effect="{DynamicResource TertiaryDropShadow}">
                        <!--Rectangle Fill="#C0000000" Margin="0,5,0,-2">
                            <Rectangle.Effect>
                                <BlurEffect Radius="20" RenderingBias="Performance"/>
                            </Rectangle.Effect>
                        </Rectangle-->
                        <Grid RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True">
                            <Border x:Name="SizingAid" Background="#01000000"/>
                            <Border x:Name="BackgroundBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3" ClipToBounds="True" UseLayoutRounding="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.75" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                    <!--GradientStop Offset="0" Color="#FFFCFCFC"/>
                                    <GradientStop Offset="0.75" Color="#FFE2E2E2"/-->
                                </Border.Background>
                                <Grid>
                                    <Border x:Name="SelectedBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3" ClipToBounds="True" UseLayoutRounding="True" Opacity="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.75" GradientStops="{DynamicResource CardListViewSelectedBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" UseLayoutRounding="True" ClipToBounds="True"/>
                                    <!--ContentPresenter.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Border Width="{Binding ActualWidth, Source={x:Reference SizingAid}}" Height="{Binding ActualHeight, Source={x:Reference SizingAid}}" Background="Black" CornerRadius="3"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </ContentPresenter.OpacityMask>
                                </ContentPresenter-->
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--ThicknessAnimation Storyboard.TargetProperty="Margin" To="-3" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}"/-->
                                        <!--DoubleAnimation Storyboard.TargetProperty="Height" To="74" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" /-->
                                        <ThicknessAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Margin" To="5" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--ThicknessAnimation Storyboard.TargetProperty="Margin" To="0" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" />
                                                                                <DoubleAnimation Storyboard.TargetProperty="Height" To="68" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" /-->
                                        <ThicknessAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Margin" To="10" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" />
                                        <!--ColorAnimation Storyboard.TargetName="BackgroundBorderTopStop" Storyboard.TargetProperty="Color" To="#FFD6ECF6" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" />
                                        <ColorAnimation Storyboard.TargetName="BackgroundBorderBottomStop" Storyboard.TargetProperty="Color" To="#FF9DC6DA" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" /-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" />
                                        <!--ColorAnimation Storyboard.TargetName="BackgroundBorderTopStop" Storyboard.TargetProperty="Color" To="#FFFCFCFC" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" />
                                        <ColorAnimation Storyboard.TargetName="BackgroundBorderBottomStop" Storyboard.TargetProperty="Color" To="#FFE2E2E2" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}" /-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ListView Styles-->


    <!--#region Panel Styles-->
    
    <Style TargetType="Border" x:Key="HorizontalBarBorderStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource HorizontalPanelBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource HorizontalPanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="50"/>
    </Style>

    <Style TargetType="Border" x:Key="VerticalBarBorderStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource VerticalPanelBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource VerticalPanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!--#endregion Panel Styles-->


    <!--#region CheckBox and RadioButton Styles-->

    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinHeight" Value="13" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <Grid Width="13" Height="13" DockPanel.Dock="Left">
                                <Border x:Name="IdleBackground" CornerRadius="3" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="3" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="HoverBackground" CornerRadius="3" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="3" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="PressedBackground" CornerRadius="3" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="3" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledBackground" CornerRadius="3" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border CornerRadius="3" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                                </Border>
                                <Path x:Name="CheckMark" Data="M 2 5 L 4 9 L 8 0" HorizontalAlignment="Center"
                              VerticalAlignment="Center" Stroke="{DynamicResource CheckBoxTickBrush}" StrokeThickness="1.125"
                              Opacity="0" />
                                <Path x:Name="IndeterminateBox" Data="M 0.5 0.5 L 0.5 6 L 6 6 L 6 0.5 Z"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource CheckBoxTickBrush}" Stroke="{DynamicResource CheckBoxTickBrush}" StrokeThickness="1.25" Opacity="0" />
                            </Grid>
                            <Grid Margin="5,0,0,0">
                                <ContentPresenter/>
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RadioButton}" TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinHeight" Value="14" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <Grid Width="14" MaxHeight="14" DockPanel.Dock="Left">
                                <Border x:Name="IdleBackground" CornerRadius="7" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="7" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="HoverBackground" CornerRadius="7" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="7" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="PressedBackground" CornerRadius="7" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="7" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledBackground" CornerRadius="7" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border CornerRadius="7" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                                </Border>
                                <Canvas x:Name="OpacityLimiterCanvas" Width="6" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1">
                                    <Ellipse x:Name="CheckMark" Width="6" Height="6" Fill="{DynamicResource CheckBoxTickBrush}" Stroke="{DynamicResource CheckBoxTickBrush}" StrokeThickness="1.125" Opacity="0"/>
                                </Canvas>
                            </Grid>
                            <Grid Margin="5,0,0,0">
                                <ContentPresenter VerticalAlignment="Center"/>
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="OpacityLimiterCanvas"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="OpacityLimiterCanvas"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion CheckBox and RadioButton Styles-->


    <!--#region TabControl Styles-->

    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Padding" Value="12,2,12,2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="IdleBackground" Margin="0" Padding="0" BorderBrush="{DynamicResource TabItemIdleBorderBrush}" BorderThickness="1,1,1,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TabItemIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TabItemIdleSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Margin="0" Padding="0" BorderBrush="{DynamicResource TabItemHoverBorderBrush}" BorderThickness="1,1,1,0" Opacity="0" ClipToBounds="true">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0.25" Color="Black"/>
                                        <GradientStop Offset="0.75" Color="#7F000000"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border Margin="1,1,1,0" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBackground" Margin="0,0,0,-1" Padding="0" BorderBrush="{DynamicResource TabItemPressedBorderBrush}" BorderThickness="1,1,1,0" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TabItemPressedBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border Margin="1,1,1,0" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TabItemPressedSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="PressedFlashBackground" Background="{DynamicResource TabItemPressedFlashBackground}" BorderBrush="{DynamicResource TabItemPressedFlashBorderBrush}" Margin="0" Padding="0" BorderThickness="2,2,2,0" Opacity="0" OpacityMask="{Binding OpacityMask, Source={x:Reference HoverBackground}}"/>
                        <!--Border.Background>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStop Offset="0" Color="#7FB1DAEE"/>
                          <GradientStop Offset="1" Color="#00B1DAEE"/>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Border.Background>
                    <Border.BorderBrush>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStop Offset="0.5" Color="#FFB1DAEE"/>
                          <GradientStop Offset="1" Color="#00B1DAEE"/>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Border.BorderBrush-->

                        <Border x:Name="DisabledBackground" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1,1,1,0" Opacity="0">
                            <Border Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                        </Border>
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                          Storyboard.TargetProperty="Opacity" To="0"
                                          Duration="0:0:0" />
                                        <!--DoubleAnimation Storyboard.TargetName="PressedBackground"
                                          Storyboard.TargetProperty="Opacity" To="1"
                                          Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="PressedFlashBackground"
                                          Storyboard.TargetProperty="Opacity" From="1" To="0"
                                          Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                          Storyboard.TargetProperty="Opacity" To="1"
                                          Duration="0:0:0" />
                                        <!--DoubleAnimation Storyboard.TargetName="PressedBackground"
                                          Storyboard.TargetProperty="Opacity" To="0"
                                          Duration="0:0:0.125" /-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                          Storyboard.TargetProperty="Opacity" To="1"
                                          Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                          Storyboard.TargetProperty="Opacity" To="0"
                                          Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TabControlBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1"/>
                        <!--MinHeight="24"-->
                        <Border Name="Border" Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="0" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <!--Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FFD5D5D5"/>
                                        <GradientStop Offset="1" Color="#FFC2C2C2"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background-->
                            <Border BorderThickness="1" Background="Transparent" CornerRadius="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TabControlSecondaryBackgroundGradientStops}"/>
                                </Border.BorderBrush>
                                <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="-2"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <!--Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion TabControl Styles-->


    <!--#region StatusBar Styles-->

    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border x:Name="Border" Style="{DynamicResource HorizontalBarBorderStyle}">
                        <ItemsPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DockPanel.Dock" Value="Left">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,1,0"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Top">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Right">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,0,0"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Bottom">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Fill="{TemplateBinding Foreground}" Width="1" Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <ContentPresenter Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion StatusBar Styles-->


    <!--#region TextBox Styles-->
    
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="IdleBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxIdleBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxIdleBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="Transparent" BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                        </Border>
                        <ScrollViewer Margin="{TemplateBinding Padding}" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion TextBox Styles-->


    <!--#region GroupBox Styles-->

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid Margin="10" Effect="{DynamicResource SecondaryDropShadow}">
                        <!--Grid.Effect>
                            <DropShadowEffect Color="Black" Direction="270" ShadowDepth="10" BlurRadius="20" Opacity="0.5"/>
                        </Grid.Effect-->
                        <Border Grid.Row="1" BorderBrush="Transparent" BorderThickness="0" CornerRadius="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="HeaderPresenter" Grid.Row="0" ContentSource="Header" RecognizesAccessKey="True" TextBlock.FontSize="14" Margin="0,0,0,5" Opacity="0.5"/>
                                <ContentPresenter x:Name="BodyPresenter" Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--DataTrigger Binding="{Binding Path=ContentSource, Source={x:Reference HeaderPresenter}, Converter={StaticResource IsNullOrWhiteSpaceConverter}}" Value="True"-->
                        <Trigger Property="Header" Value="{x:Null}">
                            <!--Setter TargetName="BodyPresenter" Property="Margin" Value="0,-10,0,0"/-->
                            <Setter TargetName="HeaderPresenter" Property="Margin" Value="0"/>
                            <Setter TargetName="TopRow" Property="Height" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion GroupBox Styles-->


    <!--#region ProgressBar Styles-->
    
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14" MinWidth="200">
                        <Border Name="PART_Track" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" BorderThickness="1" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ProgressBarTrackBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border x:Name="PART_Indicator" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" HorizontalAlignment="Left">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ProgressBar Styles-->


    <!--#region ComboBox Styles-->

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid>
                                                    <Border x:Name="IdleBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                                        </Border.Background>
                                                        <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
                                                            </Border.Background>
                                                        </Border>
                                                    </Border>
                                                    <Border x:Name="HoverBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                                        </Border.Background>
                                                        <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                                            </Border.Background>
                                                        </Border>
                                                    </Border>
                                                    <Border x:Name="PressedBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                                        </Border.Background>
                                                        <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                                            </Border.Background>
                                                        </Border>
                                                    </Border>
                                                    <Border x:Name="DisabledBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                                                        <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                                                    </Border>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="20" />
                                                        </Grid.ColumnDefinitions>
                                                        <!--Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1">
                                                            <Border.BorderBrush>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                                                                </LinearGradientBrush>
                                                            </Border.BorderBrush>
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStopCollection>
                                                                            <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                                                        </GradientStopCollection>
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                        </Border>
                                                        <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="Black"/-->
                                                        <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" >
                                                            <Path.Fill>
                                                                <SolidColorBrush Color="{TemplateBinding Foreground}"/>
                                                            </Path.Fill>
                                                        </Path>
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                                                    <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                                                    <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="PART_ContentHost" Focusable="False" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Border x:Name="DropDownBorder" BorderThickness="1" UseLayoutRounding="True" Effect="{DynamicResource SecondaryDropShadow}">
                                <!--Border.Effect>
                                    <DropShadowEffect Color="Black" Direction="270" ShadowDepth="10" BlurRadius="20" Opacity="0.5"/>
                                </Border.Effect-->
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                </Border.Background>
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ComboBox Styles-->

    
    <!--#region ScrollBar Styles-->
    
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource ScrollBarLineUpButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Grid>
                            <Border x:Name="IdleBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0"/>
                            </Border>
                            <Border x:Name="HoverBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Border x:Name="PressedBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border x:Name="IdleBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0"/>
                            </Border>
                            <Border x:Name="HoverBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Border x:Name="PressedBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                </Border.Background>
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledBackground" CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                                <Border CornerRadius="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToCornerRadiusConverter}}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="{TemplateBinding Background}" />
            <RepeatButton Grid.Row="0" Style="{DynamicResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand">
                <Path Data="M 0 4 L 8 4 L 4 0 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}"/>
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}">
                        <Thumb.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Thumb.BorderBrush>
                        <Thumb.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{DynamicResource ScrollBarLineButton}" Background="{DynamicResource ScrollBarLineDownButtonBackgroundBrush}" Height="18" Command="ScrollBar.LineDownCommand">
                <Path Data="M 0 0 L 4 4 L 8 0 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}"/>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="{TemplateBinding Background}" />
            <!--F0F0F0-->
            <RepeatButton Grid.Column="0" Style="{DynamicResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand">
                <Path Data="M 4 0 L 4 8 L 0 4 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}"/>
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}" Margin="0,1,0,1">
                        <Thumb.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Thumb.BorderBrush>
                        <Thumb.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{DynamicResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand">
                <Path Data="M 0 0 L 4 4 L 0 8 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}"/>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" Grid.Column="0" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShadowScrollViewerStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" Grid.Column="0" Grid.Row="0"/>
                        <Rectangle VerticalAlignment="Top" Height="18" IsHitTestVisible="False" Grid.Column="0" Grid.Row="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity="0.75" StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                <!--LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#60000000"/>
                                    <GradientStop Offset="1" Color="#00000000"/>
                                </LinearGradientBrush.GradientStops-->
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle VerticalAlignment="Bottom" Height="9" IsHitTestVisible="False" Grid.Column="0" Grid.Row="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity="0.625" StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                <!--LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#00000000"/>
                                    <GradientStop Offset="2" Color="#40000000"/>
                                </LinearGradientBrush.GradientStops-->
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="RightShadow" HorizontalAlignment="Right" Width="14" IsHitTestVisible="False" Visibility="Hidden" Grid.Column="0" Grid.Row="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity="0.875" StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                <!--LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#00000000"/>
                                    <GradientStop Offset="1" Color="#50000000"/>
                                </LinearGradientBrush.GradientStops-->
                            </Rectangle.Fill>
                        </Rectangle>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Setter TargetName="RightShadow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ScrollBar Styles-->


    <!--#region TreeView Styles-->

    <Style TargetType="TreeViewItem">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--Setter Property="MinWidth" Value="{Binding MinWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"/>
        <Setter Property="Foreground" Value="White"/-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ToggleButton x:Name="Expander" ClickMode="Release" IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" VerticalContentAlignment="center" HorizontalContentAlignment="Left" Padding="0" Margin="0" SnapsToDevicePixels="True" UseLayoutRounding="True" Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="{TemplateBinding Height}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Border x:Name="SelectedBackground" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                                        </Border.Background>
                                                        <Border Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                                            </Border.Background>
                                                        </Border>
                                                    </Border>
                                                    <Border x:Name="HoverBackground" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                                        </Border.Background>
                                                        <Border Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                                            </Border.Background>
                                                        </Border>
                                                    </Border>
                                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="8,0"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </ToggleButton>
                        <ItemsPresenter x:Name="ItemsHost" Margin="0,20,0,0" HorizontalAlignment="Stretch" Height="Auto" Visibility="Visible" MinWidth="{TemplateBinding MinWidth}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.125"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0:0:0.125">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.150"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0:0:0.150">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <!--Setter Property="Foreground" Value="#FF7F0000" /-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFC0C0C0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Foreground" Value="#FF7F0000" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion TreeView Styles-->


    <!--#region ToggleSwitch Styles-->

    <Style x:Key="{x:Type mod:ToggleSwitch}" TargetType="{x:Type mod:ToggleSwitch}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ToggleSwitchForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mod:ToggleSwitch}">
                    <Grid Background="#01000000">
                        <Border Name="Border" CornerRadius="3" BorderThickness="1" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FFD3D3D3"/>
                                        <GradientStop Offset="1" Color="#FFF0F0F0"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="3" BorderThickness="1" Padding="0" BorderBrush="Transparent" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  IsHitTestVisible="False">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFCBCBCB"/>
                                            <GradientStop Offset="1" Color="#FFDEDEDE"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Canvas x:Name="PART_Offsetter" Width="{TemplateBinding OffsetterWidth}" MinWidth="0" MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}, Converter={StaticResource SubtractConverter}, ConverterParameter=75}"/>
                            <Button x:Name="PART_Grip" IsTabStop="False" Width="75" Margin="0" Padding="0,-10" IsHitTestVisible="True">
                                <TextBlock x:Name="PART_StateText" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" IsHitTestVisible="False" Focusable="False"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ToggleSwitch Styles-->
    
</ResourceDictionary>